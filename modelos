# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#     * Rearrange models' order
#     * Make sure each model has one field with primary_key=True
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.
from __future__ import unicode_literals

from django.db import models

class Album(models.Model):
    id_album = models.IntegerField(primary_key=True, db_column='ID_album') # Field name made lowercase.
    id_owner = models.ForeignKey('Usuario', db_column='ID_owner') # Field name made lowercase.
    album_name = models.CharField(max_length=20L, db_column='Album_name') # Field name made lowercase.
    album_edit = models.IntegerField(db_column='Album_edit') # Field name made lowercase.
    class Meta:
        db_table = 'Album'

class AlbumProduct(models.Model):
    id_album = models.ForeignKey(Album, db_column='ID_album') # Field name made lowercase.
    id_product = models.ForeignKey('Product', db_column='ID_product') # Field name made lowercase.
    class Meta:
        db_table = 'Album_product'

class Bid(models.Model):
    id_bid = models.IntegerField(primary_key=True, db_column='ID_bid') # Field name made lowercase.
    id_product = models.ForeignKey('Product', db_column='ID_product') # Field name made lowercase.
    id_bidder = models.ForeignKey('Usuario', db_column='ID_bidder') # Field name made lowercase.
    bid_q = models.IntegerField(null=True, db_column='BID_Q', blank=True) # Field name made lowercase.
    bid_id_product = models.ForeignKey('Product', null=True, db_column='BID_ID_product', blank=True) # Field name made lowercase.
    bid_datetime = models.DateTimeField(db_column='BID_datetime') # Field name made lowercase.
    class Meta:
        db_table = 'Bid'

class Category(models.Model):
    id_category = models.IntegerField(primary_key=True, db_column='ID_category') # Field name made lowercase.
    category_name = models.CharField(max_length=20L, db_column='Category_name') # Field name made lowercase.
    class Meta:
        db_table = 'Category'

class City(models.Model):
    id_city = models.IntegerField(primary_key=True, db_column='ID_city') # Field name made lowercase.
    id_country = models.ForeignKey('Country', db_column='ID_country') # Field name made lowercase.
    city_name = models.CharField(max_length=20L, db_column='City_name') # Field name made lowercase.
    class Meta:
        db_table = 'City'

class Comment(models.Model):
    id_comment = models.IntegerField(primary_key=True, db_column='ID_comment') # Field name made lowercase.
    id_product = models.ForeignKey('Product', db_column='ID_product') # Field name made lowercase.
    id_sender = models.ForeignKey('Usuario', db_column='ID_sender') # Field name made lowercase.
    comment_subject = models.CharField(max_length=100L, db_column='Comment_subject', blank=True) # Field name made lowercase.
    comment_text = models.TextField(db_column='Comment_text', blank=True) # Field name made lowercase.
    comment_datetime = models.DateTimeField(db_column='Comment_datetime') # Field name made lowercase.
    class Meta:
        db_table = 'Comment'

class Country(models.Model):
    id_country = models.IntegerField(primary_key=True, db_column='ID_country') # Field name made lowercase.
    country_name = models.CharField(max_length=20L, db_column='Country_name') # Field name made lowercase.
    class Meta:
        db_table = 'Country'

class Followers(models.Model):
    id_follower = models.ForeignKey('Usuario', db_column='ID_follower') # Field name made lowercase.
    id_followed = models.ForeignKey('Usuario', db_column='ID_followed') # Field name made lowercase.
    class Meta:
        db_table = 'Followers'

class Invitation(models.Model):
    id_sender = models.ForeignKey('Usuario', db_column='ID_sender') # Field name made lowercase.
    invitation_email = models.CharField(max_length=30L, db_column='Invitation_email') # Field name made lowercase.
    invitation_token = models.CharField(max_length=50L, db_column='Invitation_token') # Field name made lowercase.
    invitation_pending = models.IntegerField(db_column='Invitation_pending') # Field name made lowercase.
    class Meta:
        db_table = 'Invitation'

class Lang(models.Model):
    id_lang = models.IntegerField(primary_key=True, db_column='ID_lang') # Field name made lowercase.
    lang_name = models.CharField(max_length=20L, db_column='Lang_name') # Field name made lowercase.
    class Meta:
        db_table = 'Lang'

class Message(models.Model):
    id_message = models.IntegerField(db_column='ID_message') # Field name made lowercase.
    id_conversation = models.IntegerField(db_column='ID_conversation') # Field name made lowercase.
    id_sender = models.ForeignKey('Usuario', db_column='ID_sender') # Field name made lowercase.
    id_receiver = models.ForeignKey('Usuario', db_column='ID_receiver') # Field name made lowercase.
    message_subject = models.CharField(max_length=100L, db_column='Message_subject') # Field name made lowercase.
    message_text = models.TextField(db_column='Message_text', blank=True) # Field name made lowercase.
    message_datetime = models.DateTimeField(db_column='Message_datetime') # Field name made lowercase.
    message_read = models.IntegerField(db_column='Message_read') # Field name made lowercase.
    class Meta:
        db_table = 'Message'

class Notification(models.Model):
    id_user = models.ForeignKey('Usuario', db_column='ID_user') # Field name made lowercase.
    notification_message = models.TextField(db_column='Notification_message') # Field name made lowercase.
    notification_pending = models.IntegerField(db_column='Notification_pending') # Field name made lowercase.
    notification_datetime = models.DateTimeField(db_column='Notification_datetime') # Field name made lowercase.
    notification_link = models.CharField(max_length=50L, db_column='Notification_link') # Field name made lowercase.
    class Meta:
        db_table = 'Notification'

class Precios(models.Model):
    bajo = models.IntegerField(db_column='Bajo') # Field name made lowercase.
    alto = models.IntegerField(db_column='Alto') # Field name made lowercase.
    precio_datetime = models.DateTimeField(primary_key=True, db_column='Precio_datetime') # Field name made lowercase.
    class Meta:
        db_table = 'Precios'

class Product(models.Model):
    id_product = models.IntegerField(primary_key=True, db_column='ID_product') # Field name made lowercase.
    id_owner = models.ForeignKey('Usuario', db_column='ID_owner') # Field name made lowercase.
    product_name = models.CharField(max_length=30L, db_column='Product_name') # Field name made lowercase.
    product_img = models.CharField(max_length=100L, db_column='Product_img') # Field name made lowercase.
    product_description = models.TextField(db_column='Product_description', blank=True) # Field name made lowercase.
    product_q_amount = models.IntegerField(db_column='Product_Q_amount') # Field name made lowercase.
    product_start_datetime = models.DateTimeField(db_column='Product_start_datetime') # Field name made lowercase.
    product_end_datetime = models.DateTimeField(db_column='Product_end_datetime') # Field name made lowercase.
    product_follower_qty = models.IntegerField(db_column='Product_follower_qty') # Field name made lowercase.
    product_visit_qty = models.IntegerField(db_column='Product_visit_qty') # Field name made lowercase.
    product_country = models.CharField(max_length=20L, db_column='Product_country') # Field name made lowercase.
    product_city = models.CharField(max_length=20L, db_column='Product_city') # Field name made lowercase.
    product_featured = models.IntegerField(null=True, db_column='Product_featured', blank=True) # Field name made lowercase.
    product_featured_time = models.IntegerField(null=True, db_column='Product_featured_time', blank=True) # Field name made lowercase.
    product_active = models.IntegerField(db_column='Product_active') # Field name made lowercase.
    class Meta:
        db_table = 'Product'

class ProductCategory(models.Model):
    id_product = models.ForeignKey(Product, db_column='ID_product') # Field name made lowercase.
    id_category = models.ForeignKey(Category, db_column='ID_category') # Field name made lowercase.
    class Meta:
        db_table = 'Product_category'

class ProductFollower(models.Model):
    id_product = models.ForeignKey(Product, db_column='ID_product') # Field name made lowercase.
    id_user = models.ForeignKey('Usuario', db_column='ID_user') # Field name made lowercase.
    class Meta:
        db_table = 'Product_follower'

class Rating(models.Model):
    id_rating = models.IntegerField(primary_key=True, db_column='ID_rating') # Field name made lowercase.
    id_rater = models.ForeignKey('Usuario', null=True, db_column='ID_rater', blank=True) # Field name made lowercase.
    id_rated = models.ForeignKey('Usuario', db_column='ID_rated') # Field name made lowercase.
    rating_level = models.IntegerField(db_column='Rating_level') # Field name made lowercase.
    rating_datetime = models.DateTimeField(db_column='Rating_datetime') # Field name made lowercase.
    class Meta:
        db_table = 'Rating'

class Trade(models.Model):
    id_trade = models.IntegerField(primary_key=True, db_column='ID_trade') # Field name made lowercase.
    id_dealer = models.ForeignKey('Usuario', null=True, db_column='ID_dealer', blank=True) # Field name made lowercase.
    id_bid = models.ForeignKey(Bid, null=True, db_column='ID_bid', blank=True) # Field name made lowercase.
    trade_code_dealer = models.CharField(max_length=10L, db_column='Trade_code_dealer', blank=True) # Field name made lowercase.
    trade_code_bidder = models.CharField(max_length=10L, db_column='Trade_code_bidder', blank=True) # Field name made lowercase.
    trade_pending_dealer = models.IntegerField(db_column='Trade_pending_dealer') # Field name made lowercase.
    trade_pending_bidder = models.IntegerField(db_column='Trade_pending_bidder') # Field name made lowercase.
    trade_datetime = models.DateTimeField(null=True, db_column='Trade_datetime', blank=True) # Field name made lowercase.
    trade_valid = models.IntegerField(db_column='Trade_valid') # Field name made lowercase.
    class Meta:
        db_table = 'Trade'

class Usuario(models.Model):
    id_usuario = models.IntegerField(primary_key=True, db_column='ID_usuario') # Field name made lowercase.
    usuario_password = models.CharField(max_length=25L, db_column='Usuario_password') # Field name made lowercase.
    usuario_name = models.CharField(max_length=20L, db_column='Usuario_name') # Field name made lowercase.
    usuario_lastname = models.CharField(max_length=20L, db_column='Usuario_lastname') # Field name made lowercase.
    usuario_bulletins = models.IntegerField(db_column='Usuario_bulletins') # Field name made lowercase.
    usuario_email_1 = models.CharField(max_length=30L, unique=True, db_column='Usuario_email_1') # Field name made lowercase.
    usuario_email_2 = models.CharField(max_length=30L, db_column='Usuario_email_2', blank=True) # Field name made lowercase.
    usuario_phone_1 = models.CharField(max_length=10L, db_column='Usuario_phone_1', blank=True) # Field name made lowercase.
    usuario_phone_2 = models.CharField(max_length=10L, db_column='Usuario_phone_2', blank=True) # Field name made lowercase.
    usuario_fb_token = models.CharField(max_length=150L, db_column='Usuario_FB_Token', blank=True) # Field name made lowercase.
    usuario_tw_token = models.CharField(max_length=160L, db_column='Usuario_TW_Token', blank=True) # Field name made lowercase.
    usuario_register_date = models.DateTimeField(db_column='Usuario_register_date') # Field name made lowercase.
    usuario_active = models.IntegerField(db_column='Usuario_active') # Field name made lowercase.
    usuario_city = models.ForeignKey(City, null=True, db_column='Usuario_city', blank=True) # Field name made lowercase.
    usuario_level = models.IntegerField(db_column='Usuario_level') # Field name made lowercase.
    usuario_rating = models.IntegerField(db_column='Usuario_rating') # Field name made lowercase.
    usuario_ranking_qty = models.IntegerField(null=True, db_column='Usuario_ranking_qty', blank=True) # Field name made lowercase.
    usuario_quds = models.IntegerField(db_column='Usuario_quds') # Field name made lowercase.
    usuario_follower_qty = models.IntegerField(db_column='Usuario_follower_qty') # Field name made lowercase.
    usuario_followed_qty = models.IntegerField(db_column='Usuario_followed_qty') # Field name made lowercase.
    usuario_barter_qty = models.IntegerField(db_column='Usuario_barter_qty') # Field name made lowercase.
    usuario_remaining_invitations = models.IntegerField(db_column='Usuario_remaining_invitations') # Field name made lowercase.
    usuario_art = models.IntegerField(db_column='Usuario_art') # Field name made lowercase.
    usuario_music = models.IntegerField(db_column='Usuario_music') # Field name made lowercase.
    usuario_tech = models.IntegerField(db_column='Usuario_tech') # Field name made lowercase.
    usuario_cars = models.IntegerField(db_column='Usuario_cars') # Field name made lowercase.
    usuario_travels = models.IntegerField(db_column='Usuario_travels') # Field name made lowercase.
    usuario_clothes = models.IntegerField(db_column='Usuario_clothes') # Field name made lowercase.
    usuario_cine = models.IntegerField(db_column='Usuario_cine') # Field name made lowercase.
    usuario_sports = models.IntegerField(db_column='Usuario_sports') # Field name made lowercase.
    usuario_eco = models.IntegerField(db_column='Usuario_eco') # Field name made lowercase.
    usuario_culture = models.IntegerField(db_column='Usuario_culture') # Field name made lowercase.
    usuario_spectacles = models.IntegerField(db_column='Usuario_spectacles') # Field name made lowercase.
    usuario_love = models.IntegerField(db_column='Usuario_love') # Field name made lowercase.
    usuario_food = models.IntegerField(db_column='Usuario_food') # Field name made lowercase.
    usuario_vacations = models.IntegerField(db_column='Usuario_vacations') # Field name made lowercase.
    usuario_services = models.IntegerField(db_column='Usuario_services') # Field name made lowercase.
    usuario_lang = models.IntegerField(null=True, db_column='Usuario_lang', blank=True) # Field name made lowercase.
    usuario_img = models.CharField(max_length=50L, db_column='Usuario_img', blank=True) # Field name made lowercase.
    class Meta:
        db_table = 'Usuario'

class Warning(models.Model):
    id_warning = models.IntegerField(primary_key=True, db_column='ID_warning') # Field name made lowercase.
    id_sender = models.ForeignKey(Usuario, db_column='ID_sender') # Field name made lowercase.
    id_receiver = models.ForeignKey(Usuario, db_column='ID_receiver') # Field name made lowercase.
    warning_reason = models.ForeignKey('Warningreason', null=True, db_column='Warning_reason', blank=True) # Field name made lowercase.
    warning_message = models.TextField(db_column='Warning_message') # Field name made lowercase.
    warning_datetime = models.IntegerField(db_column='Warning_datetime') # Field name made lowercase.
    class Meta:
        db_table = 'Warning'

class Warningreason(models.Model):
    id_reason = models.IntegerField(primary_key=True, db_column='ID_reason') # Field name made lowercase.
    reason_text = models.CharField(max_length=50L, db_column='Reason_text') # Field name made lowercase.
    class Meta:
        db_table = 'WarningReason'

class AuthGroup(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=80L, unique=True)
    class Meta:
        db_table = 'auth_group'

class AuthGroupPermissions(models.Model):
    id = models.IntegerField(primary_key=True)
    group = models.ForeignKey(AuthGroup)
    permission = models.ForeignKey('AuthPermission')
    class Meta:
        db_table = 'auth_group_permissions'

class AuthPermission(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=50L)
    content_type = models.ForeignKey('DjangoContentType')
    codename = models.CharField(max_length=100L)
    class Meta:
        db_table = 'auth_permission'

class AuthUser(models.Model):
    id = models.IntegerField(primary_key=True)
    username = models.CharField(max_length=30L, unique=True)
    first_name = models.CharField(max_length=30L)
    last_name = models.CharField(max_length=30L)
    email = models.CharField(max_length=75L)
    password = models.CharField(max_length=128L)
    is_staff = models.IntegerField()
    is_active = models.IntegerField()
    is_superuser = models.IntegerField()
    last_login = models.DateTimeField()
    date_joined = models.DateTimeField()
    class Meta:
        db_table = 'auth_user'

class AuthUserGroups(models.Model):
    id = models.IntegerField(primary_key=True)
    user = models.ForeignKey(AuthUser)
    group = models.ForeignKey(AuthGroup)
    class Meta:
        db_table = 'auth_user_groups'

class AuthUserUserPermissions(models.Model):
    id = models.IntegerField(primary_key=True)
    user = models.ForeignKey(AuthUser)
    permission = models.ForeignKey(AuthPermission)
    class Meta:
        db_table = 'auth_user_user_permissions'

class DjangoAdminLog(models.Model):
    id = models.IntegerField(primary_key=True)
    action_time = models.DateTimeField()
    user = models.ForeignKey(AuthUser)
    content_type = models.ForeignKey('DjangoContentType', null=True, blank=True)
    object_id = models.TextField(blank=True)
    object_repr = models.CharField(max_length=200L)
    action_flag = models.IntegerField()
    change_message = models.TextField()
    class Meta:
        db_table = 'django_admin_log'

class DjangoContentType(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=100L)
    app_label = models.CharField(max_length=100L)
    model = models.CharField(max_length=100L)
    class Meta:
        db_table = 'django_content_type'

class DjangoSession(models.Model):
    session_key = models.CharField(max_length=40L, primary_key=True)
    session_data = models.TextField()
    expire_date = models.DateTimeField()
    class Meta:
        db_table = 'django_session'

class DjangoSite(models.Model):
    id = models.IntegerField(primary_key=True)
    domain = models.CharField(max_length=100L)
    name = models.CharField(max_length=50L)
    class Meta:
        db_table = 'django_site'

